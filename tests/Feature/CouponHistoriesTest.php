<?php



use App\Models\Banner;
use App\Models\Coupon;
use App\Models\Program;
use App\Models\User;
use App\Models\Waiting;
use Carbon\Carbon;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class CouponHistoriesTest extends TestCase
{
    use RefreshDatabase;

    protected $user;

    protected $other;

    protected $form;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->user = User::factory()->create();
        $this->other = User::factory()->create();

        $this->actingAs($this->user);

        $this->form = [

        ];
    }

    /** @test */
    public function 자신의_목록을_조회할_수_있다()
    {
        $couponHistories = \App\Models\CouponHistory::factory()->count(5)->create([
            'user_id' => $this->user->id
        ]);

        $otherPointHistories = \App\Models\CouponHistory::factory()->count(3)->create([
            'user_id' => $this->other->id
        ]);

        $items = $this->json('get', '/api/couponHistories')->decodeResponseJson()['data'];

        $this->assertEquals(count($couponHistories), count($items));
    }

    /** @test */
    public function 증감여부별_목록을_조회할_수_있다()
    {
        $increasePointHistories = \App\Models\CouponHistory::factory()->count(5)->create([
            'user_id' => $this->user->id,
            'increase' => 1,

        ]);

        $decreasePointHistories = \App\Models\CouponHistory::factory()->count(3)->create([
            'user_id' => $this->user->id,
            'increase' => 0,
        ]);

        $items = $this->json('get', '/api/couponHistories', [
            'increase' => 0
        ])->decodeResponseJson()['data'];

        $this->assertEquals(count($decreasePointHistories), count($items));
    }
}
