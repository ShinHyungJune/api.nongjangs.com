<?php


use App\Enums\MomentCouponGroup;
use App\Enums\TargetCouponGroup;
use App\Enums\TypeCouponGroup;
use App\Enums\TypeDiscount;
use App\Enums\TypeExpire;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class CouponGroupsTest extends TestCase
{
    use RefreshDatabase;

    protected $user;

    protected $other;

    protected $form;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->user = User::factory()->create();
        $this->other = User::factory()->create();

        $this->actingAs($this->user);

        $this->form = [

        ];
    }

    /** @test */
    public function 누구나_목록을_조회할_수_있다()
    {
        /*moment가 null
type_expire가 from_download거나 specific이면 유효기간이 유효한 경우*/
    }

    /** @test */
    public function 유형들을_포함한_목록을_조회할_수_있다()
    {
        // types
    }

    /** @test */
    public function 상품별_목록을_조회할_수_있다()
    {
        // product_id값이 넘어오면 product_id를 포함하거나 all_product가 1이면 가져오기 (전체 직거래상품)
    }

    /** @test */
    public function 패키지_유형별_목록을_조회할_수_있다()
    {
        // type_package
    }

    /** @test */
    public function 데이터에서_보유여부를_조회할_수_있다()
    {
        // has
    }

    /** @test */
    public function 상황에_따라_쿠폰이_자동발급된다()
    {
        // 일단 쿠폰 그룹 생성

        // 상황 발생시킨 후 쿠폰발급 확인

        $items = [
            [
                'title' => '개인정보입력 할인 쿠폰',
                'moment' => MomentCouponGroup::PROFILE,
                'type' => TypeCouponGroup::ALL,
                'target' => TargetCouponGroup::ALL,
                'type_discount' => TypeDiscount::NUMBER,
                'value' => 1000,
                'max_price_discount' => 1000,
                'min_price_order' => 1000,
                'type_expire' => TypeExpire::FROM_DOWNLOAD,
                'days' => 60,
            ],
            /*[ // 등급별로 각 등급 혜택금액에 맞게 넣어야함
                'title' => '등급쿠폰',
                'moment' => MomentCouponGroup::GRADE,
                'grade_id' => '',
                'type' => TypeCouponGroup::ALL,
                'target' => TargetCouponGroup::ALL,
                'type_discount' => TypeDiscount::NUMBER,
                'value' => '',
                'max_price_discount' => '',
                'min_price_order' => '',
                'type_expire' => TypeExpire::FROM_DOWNLOAD,
                'days' => 60,
            ],*/
            [
                'title' => '생일쿠폰',
                'moment' => MomentCouponGroup::BIRTHDAY,
                'type' => TypeCouponGroup::ALL,
                'target' => TargetCouponGroup::ALL,
                'type_discount' => TypeDiscount::NUMBER,
                'value' => 3000,
                'max_price_discount' => 3000,
                'min_price_order' => 3000,
                'type_expire' => TypeExpire::FROM_DOWNLOAD,
                'days' => 60,
            ],
            [
                'title' => '첫구매',
                'type' => TypeCouponGroup::ALL,
                'target' => TargetCouponGroup::ALL,
                'type_discount' => TypeDiscount::NUMBER,
                'value' => 3000,
                'max_price_discount' => 3000,
                'min_price_order' => 3000,
                'type_expire' => TypeExpire::FROM_DOWNLOAD,
                'days' => 60,
            ],
        ];
    }
}
