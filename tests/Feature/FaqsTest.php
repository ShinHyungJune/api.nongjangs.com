<?php



use App\Models\Banner;
use App\Models\Coupon;
use App\Models\Program;
use App\Models\User;
use App\Models\Waiting;
use Carbon\Carbon;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class FaqsTest extends TestCase
{
    use RefreshDatabase;

    protected $user;

    protected $other;

    protected $form;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->user = User::factory()->create();
        $this->other = User::factory()->create();

        $this->actingAs($this->user);

        $this->form = [

        ];
    }

    /** @test */
    public function 누구나_목록을_조회할_수_있다()
    {
        $faqs = \App\Models\Faq::factory()->count(5)->create();

        $items = $this->json('get', '/api/faqs', [])->decodeResponseJson()['data'];

        $this->assertEquals(count($faqs), count($items));
    }

    /** @test */
    public function 누구나_카테고리별_목록을_조회할_수_있다()
    {
        $a = \App\Models\FaqCategory::factory()->create();
        $aFaqs = \App\Models\Faq::factory()->count(5)->create([
            'faq_category_id' => $a->id,
        ]);

        $b = \App\Models\FaqCategory::factory()->create();
        $bFaqs = \App\Models\Faq::factory()->count(3)->create([
            'faq_category_id' => $b->id,
        ]);

        $items = $this->json('get', '/api/faqs', [
            'faq_category_id' => $b->id,
        ])->decodeResponseJson()['data'];

        $this->assertEquals(count($bFaqs), count($items));
    }

    /** @test */
    public function 누구나_검색어로_목록을_조회할_수_있다()
    {
        $word = "123";
        $includeFaqs = \App\Models\Faq::factory()->count(5)->create([
            'title' => $word,
        ]);

        $excludeFaqs = \App\Models\Faq::factory()->count(3)->create([

        ]);

        $items = $this->json('get', '/api/faqs', [
            'word' => $word,
        ])->decodeResponseJson()['data'];

        $this->assertEquals(count($includeFaqs), count($items));
    }
}
