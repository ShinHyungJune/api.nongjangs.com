<?php



use App\Enums\TypePop;
use App\Models\Pop;
use App\Models\Coupon;
use App\Models\Program;
use App\Models\User;
use App\Models\Waiting;
use Carbon\Carbon;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class PopsTest extends TestCase
{
    use RefreshDatabase;

    protected $user;

    protected $other;

    protected $form;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->user = User::factory()->create();
        $this->other = User::factory()->create();

        $this->actingAs($this->user);

        $this->form = [

        ];
    }

    /** @test */
    public function 누구나_목록을_조회할_수_있다()
    {
        $pops = \App\Models\Pop::factory()->count(5)->create();

        $items = $this->json('get', '/api/pops')->decodeResponseJson()['data'];

        $this->assertEquals(count($pops), count($items));
    }

    /** @test */
    public function 진행중인_목록만_조회할_수_있다()
    {
        // open이고 started_at과 finished_at 기간이 맞아야함
        $includePops = Pop::factory()->count(5)->create([
        ]);

        $excludePops = Pop::factory()->count(3)->create([
            'started_at' => Carbon::now()->addDays(3),
            'finished_at' => Carbon::now()->addDays(3),
        ]);

        $items = $this->json('get', '/api/pops', [

        ])->decodeResponseJson()['data'];

        $this->assertEquals(count($includePops), count($items));
    }
}
