<?php


use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class LikesTest extends TestCase
{
    use RefreshDatabase;

    protected $user;

    protected $other;

    protected $form;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->user = User::factory()->create();
        $this->other = User::factory()->create();

        $this->actingAs($this->user);

        $this->form = [

        ];
    }

    /** @test */
    public function 농가이야기에_대한_데이터를_생성할_수_있다()
    {
        $farmStory = \App\Models\FarmStory::factory()->create();

        $this->json('post', '/api/likes', [
            'likeable_type' => 'App\Models\FarmStory',
            'likeable_id' => $farmStory->id,
        ]);

        $this->assertCount(1, $this->user->likes()->get());

        $this->json('post', '/api/likes', [
            'likeable_type' => 'App\Models\FarmStory',
            'likeable_id' => $farmStory->id,
        ]);

        $this->assertCount(0, $this->user->likes()->get());
    }

    /** @test */
    public function 레시피에_대한_데이터를_생성할_수_있다()
    {
        $recipe = \App\Models\Recipe::factory()->create();

        $this->json('post', '/api/likes', [
            'likeable_type' => 'App\Models\Recipe',
            'likeable_id' => $recipe->id,
        ]);

        $this->assertCount(1, $this->user->likes()->get());

        $this->json('post', '/api/likes', [
            'likeable_type' => 'App\Models\Recipe',
            'likeable_id' => $recipe->id,
        ]);

        $this->assertCount(0, $this->user->likes()->get());
    }
}
