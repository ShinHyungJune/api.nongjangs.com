<?php

namespace App\Models;

use App\Enums\TypeCouponGroup;
use App\Enums\TypeExpire;
use Carbon\Carbon;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;

class Coupon extends Model
{
    use HasFactory;

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::creating(function (Coupon $coupon) {
            $couponGroup = $coupon->couponGroup;

            if($couponGroup->type_expire == TypeExpire::SPECIFIC){
                $coupon->started_at = $couponGroup->started_at;
                $coupon->finished_at = $couponGroup->finished_at;
            }

            if($couponGroup->type_expire == TypeExpire::FROM_DOWNLOAD){
                $coupon->started_at = Carbon::now();
                $coupon->finished_at = Carbon::now()->addDays($couponGroup->days);
            }
        });
    }

    protected $casts = [
        'started_at' => 'datetime',
        'finished_at' => 'datetime'
    ];

    protected $guarded = ['id'];

    public function user(): BelongsTo
    {
        return $this->belongsTo(User::class);
    }

    public function couponGroup(): BelongsTo
    {
        return $this->belongsTo(CouponGroup::class);
    }

    public function order(): BelongsTo
    {
        return $this->belongsTo(Order::class);
    }

    public function presetProduct()
    {
        return $this->hasOne(PresetProduct::class);
    }

    public function package()
    {
        return $this->hasOne(Package::class);
    }
}
