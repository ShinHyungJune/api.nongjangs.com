<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Spatie\MediaLibrary\HasMedia;
use Spatie\MediaLibrary\InteractsWithMedia;

class Category extends Model implements HasMedia
{
    use HasFactory, SoftDeletes, InteractsWithMedia;

    protected $guarded = ['id'];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::creating(function ($model){
            $prevModel = Category::orderBy("order", "desc")->first();

            $model->order = $prevModel ? $prevModel->order + 1 : 1;
        });
    }

    public function registerMediaCollections():void
    {
        $this->addMediaCollection('imgs');
        $this->addMediaCollection('example')->singleFile();
    }

    public function getExampleAttribute()
    {
        if($this->hasMedia('example')) {
            $media = $this->getMedia('example')[0];

            return [
                "id" => $media->id,
                "name" => $media->file_name,
                "url" => $media->getFullUrl()
            ];
        }

        return null;
    }

    public function getImgsAttribute()
    {
        $medias = $this->getMedia("imgs");

        $items = [];

        foreach($medias as $media){
            $items[] = [
                "id" => $media->id,
                "name" => $media->file_name,
                "url" => $media->getFullUrl()
            ];
        }

        return $items;
    }

    public function products()
    {
        return $this->belongsToMany(Product::class);
    }
}
